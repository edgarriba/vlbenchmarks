classdef SymBenchDataset < datasets.GenericTransfDataset & helpers.Logger...
    & helpers.GenericInstaller
% datasets.SymBenchDataset Wrapper around the Cabrini et al. dataset
% used in the paper "Image Matching using Local Symmetry Features"
%
%   Following options are supported:
%
%   Category :: ['arch']
%     The category within the VGG dataset, has to be one of
%         'arch','arch_easy','bank','bdom','cars',...
%         'chinesebuilding','eiffel','essighaus','graffiti',...
%         'londonbridge','madrid','metz','miduomo01',...
%         'miduomo02','montreal','neubrandenburg','notredame',...
%         'notredame12','notredame13','notredame14',...
%         'notredame15','notredame16','paintedladies',...
%         'paintedladies12','paintedladies13','paintedladies14',...
%         'paintedladies15','paintedladies16','paintedladies17',...
%         'paintedladies18','pantheon','pantheon02',...
%         'portcullis','postoffice','riga','sanmarco',...
%         'sanmarco2','stargarder','stargarder3','synagogue',...
%         'taj','tavern','townsquare','trevi02','vatican',...
%         'worldbuilding'}

% Authors: Daniel Ponsa, Edgar Riba

% AUTORIGHTS
  properties (SetAccess=private, GetAccess=public)
    Category = 'arch'; % Dataset category
    DataDir; % Image location
    ImgExt; % Image extension
  end

  properties (Constant)
    % All dataset categories
    AllCategories = {'arch','arch_easy','bank','bdom','cars',...
                     'chinesebuilding','eiffel','essighaus','graffiti',...
                     'londonbridge','madrid','metz','miduomo01',...
                     'miduomo02','montreal','neubrandenburg','notredame',...
                     'notredame12','notredame13','notredame14',...
                     'notredame15','notredame16','paintedladies',...
                     'paintedladies12','paintedladies13','paintedladies14',...
                     'paintedladies15','paintedladies16','paintedladies17',...
                     'paintedladies18','pantheon','pantheon02',...
                     'portcullis','postoffice','riga','sanmarco',...
                     'sanmarco2','stargarder','stargarder3','synagogue',...
                     'taj','tavern','townsquare','trevi02','vatican',...
                     'worldbuilding'};	
  end

  properties (Constant, Hidden)
    % Installation directory
    RootInstallDir = fullfile('data','datasets','SymBench','');
    % Names of the image transformations in particular categories
    
    % TBD: Some characteristic of the image content should be stated.
    
    CategoryImageNames = {...
            'arch',...
            'arch_easy',...
            'bank',...
            'bdom',...
            'cars',...
            'chinesebuilding',...
            'eiffel',...
            'essighaus',...
            'graffiti',...
            'londonbridge',...
            'madrid',...
            'metz',...
            'miduomo01',...
            'miduomo02',...
            'montreal',...
            'neubrandenburg',...
            'notredame',...
            'notredame12',...
            'notredame13',...
            'notredame14',...
            'notredame15',...
            'notredame16',...
            'paintedladies',...
            'paintedladies12',...
            'paintedladies13',...
            'paintedladies14',...
            'paintedladies15',...
            'paintedladies16',...
            'paintedladies17',...
            'paintedladies18',...
            'pantheon',...
            'pantheon02',...
            'portcullis',...
            'postoffice',...
            'riga',...
            'sanmarco',...
            'sanmarco2',...
            'stargarder',...
            'stargarder3',...
            'synagogue',...
            'taj',...
            'tavern',...
            'townsquare',...
            'trevi02',...
            'vatican',...
            'worldbuilding'...   
            };
    % Image labels for particular categories (degree of transf.)
    %
    % TBD: the images are just numbered
    CategoryImageLabels = {...
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2],... 
      [2]... 
      };
    % Root url for dataset tarballs
    RootUrl = 'http://www.cvc.uab.es/~daniel/SymBench/';
  end
    

  methods
    function obj = SymBenchDataset(varargin)
      import datasets.*;
      import helpers.*;
      opts.Category = obj.Category;
      [opts varargin] = vl_argparse(opts,varargin);
      [valid loc] = ismember(opts.Category,obj.AllCategories);
      assert(valid,...
        sprintf('Invalid category for SymBench dataset: %s\n',opts.Category));
      obj.DatasetName = ['SymBenchDataset-' opts.Category];
      obj.Category= opts.Category;
      obj.DataDir = fullfile(obj.RootInstallDir,opts.Category,'');
      obj.NumImages = 2;
      obj.checkInstall(varargin);
      png_files = dir(fullfile(obj.DataDir,'*.png'));
      if size(png_files,1) == 2
        obj.ImgExt = 'png';
      else
        error('Ivalid dataset image files.');
      end
      obj.ImageNames = obj.CategoryImageLabels{loc};
      obj.ImageNamesLabel = obj.CategoryImageNames{loc};
    end

    function imgPath = getImagePath(obj,imgNo)
      assert(imgNo >= 1 && imgNo <= obj.NumImages,'Out of bounds idx\n');
      imgPath = fullfile(obj.DataDir,sprintf('%02d.%s',imgNo,obj.ImgExt));
    end

    function tfs = getTransformation(obj,imgIdx)
      assert(imgIdx >= 1 && imgIdx <= obj.NumImages,'Out of bounds idx\n');
      if(imgIdx == 1), tfs = eye(3); return; end
      tfs = zeros(3,3);
      [tfs(:,1) tfs(:,2) tfs(:,3)] = ...
         textread(fullfile(obj.DataDir,sprintf('H1to%d',imgIdx)),...
         '%f %f %f%*[^\n]');
    end
  end

  methods (Access = protected)
    function [urls dstPaths] = getTarballsList(obj)
      import datasets.*;
      installDir = SymBenchDataset.RootInstallDir;
      dstPaths = {fullfile(installDir,obj.Category)};
      urls = {[SymBenchDataset.RootUrl obj.Category '.tar.gz']};
    end
  end
end
